#include "board.csp";

blackQueenUp() = [currentTurn == BLACK_TURN]moveContinuous(BLACK_QUEEN, 1, 0);
blackQueenDown() = [currentTurn == BLACK_TURN]moveContinuous(BLACK_QUEEN, -1, 0);
blackQueenLeft() = [currentTurn == BLACK_TURN]moveContinuous(BLACK_QUEEN, 0, -1);
blackQueenRight() = [currentTurn == BLACK_TURN]moveContinuous(BLACK_QUEEN, 0, 1);
blackQueenUpLeft() = [currentTurn == BLACK_TURN]moveContinuous(BLACK_QUEEN, 1, -1);
blackQueenUpRight() = [currentTurn == BLACK_TURN]moveContinuous(BLACK_QUEEN, 1, 1);
blackQueenDownLeft() = [currentTurn == BLACK_TURN]moveContinuous(BLACK_QUEEN, -1, -1);
blackQueenDownRight() = [currentTurn == BLACK_TURN]moveContinuous(BLACK_QUEEN, -1, 1);

blackQueen() = blackQueenUp() [] blackQueenDown() [] blackQueenLeft() [] blackQueenRight() [] 
               blackQueenUpLeft() [] blackQueenUpRight() [] blackQueenDownLeft() [] blackQueenDownRight();

whiteQueenUp() = [currentTurn == WHITE_TURN]moveContinuous(WHITE_QUEEN, 1, 0);
whiteQueenDown() = [currentTurn == WHITE_TURN]moveContinuous(WHITE_QUEEN, -1, 0);
whiteQueenLeft() = [currentTurn == WHITE_TURN]moveContinuous(WHITE_QUEEN, 0, -1);
whiteQueenRight() = [currentTurn == WHITE_TURN]moveContinuous(WHITE_QUEEN, 0, 1);
whiteQueenUpLeft() = [currentTurn == WHITE_TURN]moveContinuous(WHITE_QUEEN, 1, -1);
whiteQueenUpRight() = [currentTurn == WHITE_TURN]moveContinuous(WHITE_QUEEN, 1, 1);
whiteQueenDownLeft() = [currentTurn == WHITE_TURN]moveContinuous(WHITE_QUEEN, -1, -1);
whiteQueenDownRight() = [currentTurn == WHITE_TURN]moveContinuous(WHITE_QUEEN, -1, 1);

whiteQueen() = whiteQueenUp() [] whiteQueenDown() [] whiteQueenLeft() [] whiteQueenRight() [] 
               whiteQueenUpLeft() [] whiteQueenUpRight() [] whiteQueenDownLeft() [] whiteQueenDownRight();

moveBlackQueen() = changeTurnToBlackQueen{currentTurn = BLACK_TURN} -> blackQueen();

#define white_queen_down_left actualBoard[RANK_1][FILE_B] == WHITE_QUEEN && 
	piecePosition[WHITE_QUEEN][RANK] == RANK_1 && piecePosition[WHITE_QUEEN][FILE] == FILE_B;
#define white_queen_right actualBoard[RANK_4][FILE_G] == WHITE_QUEEN && 
	piecePosition[WHITE_QUEEN][RANK] == RANK_4 && piecePosition[WHITE_QUEEN][FILE] == FILE_G;
#define white_queen_up_right actualBoard[RANK_5][FILE_F] == WHITE_QUEEN && 
	piecePosition[WHITE_QUEEN][RANK] == RANK_5 && piecePosition[WHITE_QUEEN][FILE] == FILE_F;
#define black_queen_left actualBoard[RANK_7][FILE_B] == BLACK_QUEEN && 
	piecePosition[BLACK_QUEEN][RANK] == RANK_7 && piecePosition[BLACK_QUEEN][FILE] == FILE_B;
#define black_queen_up actualBoard[RANK_8][FILE_D] == BLACK_QUEEN && 
	piecePosition[BLACK_QUEEN][RANK] == RANK_8 && piecePosition[BLACK_QUEEN][FILE] == FILE_D;
#define black_queen_down_right actualBoard[RANK_3][FILE_H] == BLACK_QUEEN && 
	piecePosition[BLACK_QUEEN][RANK] == RANK_3 && piecePosition[BLACK_QUEEN][FILE] == FILE_H;

#define white_queen_eat_up_left actualBoard[RANK_6][FILE_C] == WHITE_QUEEN && 
	piecePosition[WHITE_QUEEN][RANK] == RANK_6 && piecePosition[WHITE_QUEEN][FILE] == FILE_C;
#define white_queen_eat_down_right actualBoard[RANK_1][FILE_H] == WHITE_QUEEN && 
	piecePosition[WHITE_QUEEN][RANK] == RANK_1 && piecePosition[WHITE_QUEEN][FILE] == FILE_H;
#define black_queen_eat_down actualBoard[RANK_6][FILE_D] == BLACK_QUEEN && 
	piecePosition[BLACK_QUEEN][RANK] == RANK_6 && piecePosition[BLACK_QUEEN][FILE] == FILE_D;

#define white_queen_occupied_down actualBoard[RANK_1][FILE_E] == WHITE_QUEEN && 
	piecePosition[WHITE_QUEEN][RANK] == RANK_1 && piecePosition[WHITE_QUEEN][FILE] == FILE_E;
#define black_queen_occupied_up_right actualBoard[RANK_8][FILE_E] == BLACK_QUEEN && 
	piecePosition[BLACK_QUEEN][RANK] == RANK_8 && piecePosition[BLACK_QUEEN][FILE] == FILE_E;

#define black_queen_blocked_right actualBoard[RANK_7][FILE_H] == BLACK_QUEEN && 
	piecePosition[BLACK_QUEEN][RANK] == RANK_7 && piecePosition[BLACK_QUEEN][FILE] == FILE_H;
#define black_queen_blocked_down_left actualBoard[RANK_4][FILE_A] == BLACK_QUEEN && 
	piecePosition[BLACK_QUEEN][RANK] == RANK_4 && piecePosition[BLACK_QUEEN][FILE] == FILE_A;

#define white_queen_double_black actualBoard[RANK_8][FILE_E] == WHITE_QUEEN && 
	piecePosition[WHITE_QUEEN][RANK] == RANK_8 && piecePosition[WHITE_QUEEN][FILE] == FILE_E;

#assert whiteQueen() reaches white_queen_down_left;
#assert whiteQueen() reaches white_queen_right;
#assert whiteQueen() reaches white_queen_up_right;
#assert moveBlackQueen() reaches black_queen_left;
#assert moveBlackQueen() reaches black_queen_up;
#assert moveBlackQueen() reaches black_queen_down_right;

#assert whiteQueen() reaches white_queen_eat_up_left;
#assert whiteQueen() reaches white_queen_eat_down_right;
#assert moveBlackQueen() reaches black_queen_eat_down;

#assert whiteQueen() reaches white_queen_occupied_down;
#assert moveBlackQueen() reaches black_queen_occupied_up_right;

#assert moveBlackQueen() reaches black_queen_blocked_right;
#assert moveBlackQueen() reaches black_queen_blocked_down_left;

#assert whiteQueen() reaches white_queen_double_black;
